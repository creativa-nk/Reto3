{"version":3,"sources":["components/Card.js","utils/store.js","utils/storeApi.js","components/InputCard.js","components/InputContainer.js","components/List.js","App.js","reportWebVitals.js","index.js"],"names":["Card","card","index","id","deleteCard","draggableId","provided","ref","innerRef","dragHandleProps","draggableProps","className","title","onClick","data","lists","cards","listIds","React","createContext","InputCard","setOpen","listId","type","useContext","storeApi","addMoreCard","addMoreList","useState","setTitle","Paper","InputBase","multiline","autoFocus","placeholder","value","onChange","e","target","Button","InputContainer","open","Collapse","in","List","list","store","setData","newListCards","splice","console","log","newState","droppableId","droppableProps","map","deleteList","App","Provider","newCardId","uuid","newCard","newListId","newList","onDragEnd","result","destination","source","newListIds","sourceList","destinationList","draggingCard","filter","newSate","direction","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6daa8b2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Draggable} from 'react-beautiful-dnd'\r\n\r\n\r\n\r\nexport default function Card({card,index , id, deleteCard}){\r\n  \r\n    return(\r\n        <Draggable draggableId={card.id} index={index}>\r\n            {(provided)=>(\r\n                <div\r\n                     ref={provided.innerRef}\r\n                     {...provided.dragHandleProps}\r\n                     {...provided.draggableProps}\r\n                >\r\n                     <div className='tarea'>{card.title}\r\n                        <div className='Xbtn'    onClick={() =>deleteCard(id, index)}  >X</div>\r\n                     </div>\r\n                </div> \r\n            )}\r\n        </Draggable>\r\n    )\r\n}","const cards = [\r\n    {\r\n      id: 'card-1',\r\n      title: 'Practicar coding',\r\n    },\r\n    {\r\n      id: 'card-2',\r\n      title: 'Hacer la compra',\r\n    },\r\n    {\r\n      id: 'card-3',\r\n      title: 'Sacar el perro',\r\n    },\r\n  ];\r\n  \r\n  const data = {\r\n    lists: {\r\n      'list-1': {\r\n        id: 'list-1',\r\n        title: 'Todo',\r\n        cards,\r\n      },\r\n      'list-2': {\r\n        id: 'list-2',\r\n        title: 'Doing',\r\n        cards:[],\r\n      },\r\n\r\n    },\r\n    listIds: ['list-1','list-2'],\r\n  };\r\n  \r\n  export default data;","import React from 'react';\r\nexport default React.createContext(null);","import React, { useState, useContext } from 'react';\r\nimport storeApi from '../utils/storeApi';\r\nimport { Paper, InputBase, Button } from '@material-ui/core';\r\n\r\n\r\nexport default function InputCard({setOpen,listId,type}){\r\n    const {addMoreCard, addMoreList} = useContext(storeApi);\r\n    const [title,setTitle] = useState('')\r\n    const handleOnChange = (e) =>{\r\n        setTitle(e.target.value);\r\n    };\r\n    const handleBtnConfirm = () =>{\r\n       if(type==='card'){\r\n        addMoreCard(title, listId);\r\n        setTitle('')\r\n        setOpen(false);\r\n    } else {\r\n        addMoreList(title);\r\n        setTitle('')\r\n        setOpen(false);\r\n    }\r\n    };\r\n\r\n\r\n    return(\r\n        <div  className='containetInputCard'>\r\n             <div>\r\n                 <Paper className='inputCard'>\r\n                <InputBase \r\n                   multiline\r\n                   autoFocus\r\n                   placeholder={\r\n                       type === 'card'\r\n                       ?'Descripción de la tarea'\r\n                       :'Añade nombre de lista'\r\n                    }\r\n                   value={title}\r\n                   onChange={handleOnChange}/>\r\n                 </Paper>\r\n              </div>\r\n              <div>\r\n                    <Button onClick={handleBtnConfirm} >\r\n                      {type === 'card' ? 'Añadir Tarea' : 'Añadir Lista'}\r\n                    </Button>\r\n                  <Button onClick={()=>setOpen(false)}>x</Button>\r\n              </div>\r\n        </div>\r\n    )\r\n}","import React,{useState} from 'react';\r\nimport {Collapse } from '@material-ui/core';\r\nimport InputCard from './InputCard'\r\n\r\n\r\nexport default function InputContainer({ listId, type }) {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <div>\r\n      <Collapse in={open}>\r\n        <InputCard setOpen={setOpen} listId={listId} type={type} />\r\n      </Collapse>\r\n      <Collapse in={!open}>\r\n        <div  className='btnAdd'\r\n           onClick={() => setOpen(!open)} \r\n        >\r\n          <span className='textBtnAdd'>\r\n            {type === 'card' ? '+ Añadir Tarea' : '+ Añadir Lista'}\r\n          </span>\r\n        </div>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}","import React,{useState} from 'react';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport Card from './Card';\r\nimport store from '../utils/store';\r\nimport InputConteiner from './InputContainer'\r\n\r\n\r\nexport default function List({list,index ,listId}){\r\n    const [data,setData] = useState(store);\r\n\r\n    const deleteCard = (id,index) =>{\r\n    \r\n        const newListCards = data.lists[listId].cards.splice(index, 1)\r\n                        \r\n        console.log(listId)\r\n        console.log(index);\r\n        console.log(data.lists[listId].cards) \r\n        console.log(newListCards)\r\n        /* setData(data.lists[listId].cards) */ // da el error\r\n        const list = data.lists[listId];\r\n        const cards = data.lists[listId].cards\r\n\r\n        const newState ={\r\n            ...data,\r\n            lists:{\r\n                ...data.lists,\r\n                [listId]: list,\r\n            },\r\n        };\r\n        setData(newState)\r\n    } \r\n\r\n    const deleteList = (index) =>{\r\n    \r\n         data.lists[listId].cards.splice(index)\r\n\r\n        console.log(listId)\r\n        console.log(data.lists[listId].cards)\r\n        /* setData(data.lists[listId].cards) */ // da el error\r\n        const newState ={\r\n            ...data,\r\n            lists:{\r\n                ...data.lists,\r\n                [listId]: list,\r\n            },\r\n        };\r\n        setData(newState)\r\n\r\n    }\r\n    return(\r\n        <Draggable draggableId={list.id} index={index}>\r\n            {(provided) => (\r\n                <div className='lista'{...provided.draggableProps} ref={provided.innerRef}>\r\n                    <div  {...provided.dragHandleProps}>\r\n                        <h1 className='tituloLista'>{list.title} </h1>\r\n                             <Droppable droppableId={list.id}>\r\n                                  {(provided)=>(\r\n                                <div\r\n                                  ref={provided.innerRef}\r\n                                  {...provided.droppableProps}\r\n                                >\r\n                                 {list.cards.map((card,index)=>(\r\n                                 <Card key={card.id} card={card} index={index} deleteCard={deleteCard} />\r\n                                 ))}\r\n                                 {provided.placeholder}\r\n                                </div>\r\n                                  )}    \r\n                             </Droppable>\r\n                             <div>\r\n                                <InputConteiner listId={list.id} type='card' />\r\n                                 <div className='XbtnLista'  onClick = {() => deleteList(listId)}>Limpiar Lista</div>\r\n                             </div>\r\n                         \r\n                    </div>\r\n                </div>\r\n            )}\r\n        \r\n        </Draggable> \r\n    );\r\n}","import React, { useState } from 'react';\r\nimport List from './components/List';\r\nimport store from './utils/store';\r\nimport StoreApi from './utils/storeApi';\r\nimport {v4 as uuid} from 'uuid';\r\nimport './App.css';\r\nimport InputContainer from './components/InputContainer';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\n\r\nexport default function App() {\r\n  const [data,setData] = useState(store);\r\n\r\n  const addMoreCard = (title, listId) => {\r\n    console.log(title, listId);\r\n\r\n    const newCardId = uuid();\r\n    console.log(newCardId);\r\n    const newCard ={\r\n      id: newCardId,\r\n      title,\r\n    };\r\n\r\n    const list = data.lists[listId];\r\n    list.cards = [...list.cards, newCard];\r\n\r\n    const newState = {\r\n      ...data,\r\n      lists: {\r\n        ...data.lists,\r\n        [listId]: list,\r\n      },\r\n    };\r\n    setData(newState);\r\n  };\r\n\r\n  const addMoreList = (title) =>{\r\n    const newListId = uuid();\r\n    const newList = {\r\n      id:newListId,\r\n      title,\r\n      cards:[]\r\n    };\r\n\r\n\r\n   /*  const updateListTitle = (title, listId) => {\r\n      const list = data.lists[listId];\r\n      list.title = title;\r\n    } */\r\n\r\n\r\n    const newState = {\r\n      listIds: [...data.listIds, newListId],\r\n      lists: {\r\n        ...data.lists,\r\n        [newListId]: newList\r\n      },\r\n    };\r\n    setData(newState);\r\n  }\r\n\r\n const onDragEnd = (result) => {\r\n    const { destination, source, draggableId, type } = result;\r\n    console.log('destination', destination, 'source', source, draggableId);\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    if (type === 'list') {\r\n      const newListIds = data.listIds;\r\n      newListIds.splice(source.index, 1);\r\n      newListIds.splice(destination.index, 0, draggableId);\r\n      return;\r\n    }\r\n\r\n    const sourceList = data.lists[source.droppableId];\r\n    const destinationList = data.lists[destination.droppableId];\r\n    const draggingCard = sourceList.cards.filter(\r\n      (card) => card.id === draggableId\r\n    )[0];\r\n\r\n    if (source.droppableId === destination.droppableId) {\r\n      sourceList.cards.splice(source.index, 1);\r\n      destinationList.cards.splice(destination.index, 0, draggingCard);\r\n      const newSate = {\r\n        ...data,\r\n        lists: {\r\n          ...data.lists,\r\n          [sourceList.id]: destinationList,\r\n        },\r\n      };\r\n      setData(newSate);\r\n    } else {\r\n      sourceList.cards.splice(source.index, 1);\r\n      destinationList.cards.splice(destination.index, 0, draggingCard);\r\n\r\n      const newState = {\r\n        ...data,\r\n        lists: {\r\n          ...data.lists,\r\n          [sourceList.id]: sourceList,\r\n          [destinationList.id]: destinationList,\r\n        },\r\n      };\r\n      setData(newState);\r\n    }\r\n  };\r\n    \r\n  return (\r\n    <StoreApi.Provider value = {{addMoreCard, addMoreList}}>\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"app\" type=\"list\"  direction=\"horizontal\" >\r\n            {(provided) => (\r\n              <div\r\n                ref={provided.innerRef}\r\n                {...provided.droppableProps}\r\n               >\r\n                  <div className=\"App\">\r\n                   {data.listIds.map((listId,index)=>{\r\n                     const list = data.lists[listId];\r\n                       return(\r\n                        <List list={list} key={listId} index={index} listId={listId}/>\r\n                        )\r\n                     })}\r\n                    <InputContainer type='list' />\r\n                  </div>\r\n              </div>\r\n           )}\r\n         </Droppable>\r\n       </DragDropContext>\r\n    </StoreApi.Provider>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}